load("@rules_python//python:defs.bzl", "py_binary", "py_library")
load("@rules_ros_pip_deps//:requirements.bzl", "requirement")
load("//build_tools:pylint.bzl", "pylint")

genrule(
    name = "deps",
    srcs = [
        "roscore.xml",
        "@ros_comm//:rosmaster",
    ],
    outs = ["deps.py"],
    cmd = """
ROSMASTER=($(rootpaths @ros_comm//:rosmaster))
cat <<EOF > $@
ROSMASTER_PATH = '$${ROSMASTER}'
ROSCORE_XML_PATH = '$(rootpath roscore.xml)'
EOF""",
)

genrule(
    name = "roscore_xml",
    srcs = ["@ros_comm//:rosout"],
    outs = ["roscore.xml"],
    cmd = """
ROS_COMM=$(rootpaths @ros_comm//:rosout)
cat <<EOF > $@
<launch>
  <group ns="/">
    <node type="$${ROS_COMM}" name="rosout" respawn="true"/>
  </group>
</launch>
EOF""",
)

py_library(
    name = "roslaunch",
    srcs = glob(["*.py"]) + [":deps"],
    data = [
        ":roscore_xml",
        "@ros_comm//:rosmaster",
        "@ros_comm//:rosout",
    ],
    visibility = ["//third_party/ros:__pkg__"],
    deps = [
        "//third_party/ros:roslib",
        "@ros_comm//:rosmaster",
        "@ros_comm//:rosparam",
        "@ros_comm_msgs//:py_rosgraph_msgs",
        "@ros_ros//:rosclean",
        requirement("pyyaml"),
        requirement("rospkg"),
    ],
)

py_binary(
    name = "roscore",
    srcs = ["main.py"],
    args = ["--core"],
    main = "main.py",
    visibility = ["//visibility:public"],
    deps = [":roslaunch"],
)
